/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  org.checkerframework.checker.nullness.qual.NonNull
 */
package cc.novoline.modules.exploits;

import cc.novoline.events.EventTarget;
import cc.novoline.events.State;
import cc.novoline.events.events.MotionUpdateEvent;
import cc.novoline.events.events.PacketEvent;
import cc.novoline.events.events.SettingEvent;
import cc.novoline.events.events.TickUpdateEvent;
import cc.novoline.gui.screen.setting.Setting;
import cc.novoline.invoke.BlockInvoker;
import cc.novoline.invoke.BlockStateInvoker;
import cc.novoline.invoke.BlocksInvoker;
import cc.novoline.invoke.EventInvoker;
import cc.novoline.invoke.InventoryInvoker;
import cc.novoline.invoke.ManagerInvoker;
import cc.novoline.invoke.ModuleInvoker;
import cc.novoline.invoke.NovolineInvoker;
import cc.novoline.invoke.PacketEventInvoker;
import cc.novoline.invoke.PlayerInvoker;
import cc.novoline.invoke.StringPropertyInvoker;
import cc.novoline.modules.AbstractModule;
import cc.novoline.modules.configurations.annotation.Property;
import cc.novoline.modules.EnumModuleType;
import deobf.MCInvoker;
import deobf.ModuleRegistry;
import net.minecraft.network.packts.C03PacketPlayer;
import net.minecraft.network.packts.C06PacketPlayerPosLook;
import net.minecraft.network.packts.C08PacketPlayerBlockPlacement;
import net.minecraft.network.packts.C09PacketHeldItemChange;
import net.minecraft.network.packts.S08PacketPlayerPosLook;
import net.minecraft.network.packts.S12PacketEntityVelocity;
import java.lang.invoke.CallSite;
import java.lang.invoke.MethodHandle;
import java.lang.invoke.MethodHandles;
import java.lang.invoke.MethodType;
import java.lang.invoke.MutableCallSite;
import java.util.HashMap;
import java.util.Map;
import javax.crypto.Cipher;
import javax.crypto.SecretKeyFactory;
import javax.crypto.spec.IvParameterSpec;
import net.minecraft.client.Minecraft;
import net.Ba;
import net.minecraft.block.Block;
import net.minecraft.block.BlockPos;
import net.BooleanProperty;
import net.Items;
import net.LongJump;
import net.ModuleManager;
import net.NotificationType;
import net.PM;
import net.StringProperty;
import net.a1c;
import net.aCM;
import net.aL0;
import net.aYL;
import net.aci_0;
import net.afm_0;
import net.ag3_0;
import net.asp_2;
import net.auk_2;
import net.aum_0;
import org.checkerframework.checker.nullness.qual.NonNull;

public class NoFall
extends AbstractModule {
    private static String[] R;
    @Property(value="mlg")
    private BooleanProperty K;
    private double O;
    @Property(value="void-check")
    private BooleanProperty M;
    private int J;
    private static Map S;
    @Property(value="mode")
    private StringProperty I;
    private static String[] Q;
    private boolean H;
    private static long P;
    private int N;
    private double L;

    public boolean b() {
        Disabler.d();
        return this.mc.player.fallDistance > 3.0f && this.mc.player.prevPosY - this.mc.player.posY > 0.0;
    }

    private static Object b(MethodHandles.Lookup lookup, MutableCallSite mutableCallSite, String string, Object[] objectArray) {
        int n = (Integer)objectArray[0];
        long l4 = (Long)objectArray[1];
        String string2 = NoFall.b(n, l4);
        MethodHandle methodHandle = MethodHandles.constant(String.class, string2);
        mutableCallSite.setTarget(MethodHandles.dropArguments(methodHandle, 0, Integer.TYPE, Long.TYPE));
        return string2;
    }

    private void a(MotionUpdateEvent motionUpdateEvent) {
        Disabler.d();
        if (this.b()) {
            if (this.J % 2 == 0) {
                EventInvoker.b(motionUpdateEvent, true);
            }
            ++this.J;
        }
        this.J = 0;
    }

    private Boolean lambda$new$0() {
        Disabler.d();
        return auk_2.b(!StringPropertyInvoker.isMode(this.I, PM.a));
    }

    private void c(MotionUpdateEvent motionUpdateEvent) {
        Disabler.d();
        if (this.b()) {
            this.H = true;
        }
        if (PlayerInvoker.G(this.mc.player) || PlayerInvoker.g(this.mc.player)) {
            this.H = false;
        }
        if (this.H) {
            EventInvoker.b(motionUpdateEvent, false);
        }
    }

    private static CallSite b(MethodHandles.Lookup lookup, String string, MethodType methodType) {
        MutableCallSite mutableCallSite = new MutableCallSite(methodType);
        try {
            mutableCallSite.setTarget(MethodHandles.explicitCastArguments(MethodHandles.insertArguments(cfr_ldc_0().asCollector(Object[].class, methodType.parameterCount()), 0, lookup, mutableCallSite, string), methodType));
            return mutableCallSite;
        }
        catch (Exception exception) {
            throw new RuntimeException("net/a_W" + " : " + string + " : " + methodType.toString(), exception);
        }
    }

    @EventTarget
    public void a(TickUpdateEvent tickUpdateEvent) {
        this.a((String)StringPropertyInvoker.b(this.I));
    }

    @EventTarget
    public void a(PacketEvent packetEvent) {
        Disabler.d();
        if (PacketEventInvoker.getState(packetEvent) == State.INCOMING) {
            S12PacketEntityVelocity s12PacketEntityVelocity;
            if (PacketEventInvoker.c(packetEvent) instanceof S12PacketEntityVelocity && aYL.d(s12PacketEntityVelocity = (S12PacketEntityVelocity)PacketEventInvoker.c(packetEvent)) == PlayerInvoker.O(this.mc.player) && this.b()) {
                PacketEventInvoker.setCancelled(packetEvent, true);
            }
            if (PacketEventInvoker.c(packetEvent) instanceof S08PacketPlayerPosLook && this.b()) {
                this.mc.player.fallDistance = 0.0f;
            }
        }
    }

    static void a(NoFall noFall, Packet packet) {
        noFall.a(packet);
    }

    private static String b(byte[] byArray) {
        int n = 0;
        int n2 = byArray.length;
        char[] cArray = new char[n2];
        for (int i = 0; i < n2; ++i) {
            char c;
            int n3 = 0xFF & byArray[i];
            if (n3 < 192) {
                cArray[n++] = (char)n3;
                continue;
            }
            if (n3 < 224) {
                c = (char)((char)(n3 & 0x1F) << 6);
                n3 = byArray[++i];
                c = (char)(c | (char)(n3 & 0x3F));
                cArray[n++] = c;
                continue;
            }
            if (i >= n2 - 2) continue;
            c = (char)((char)(n3 & 0xF) << 12);
            n3 = byArray[++i];
            c = (char)(c | (char)(n3 & 0x3F) << 6);
            n3 = byArray[++i];
            c = (char)(c | (char)(n3 & 0x3F));
            cArray[n++] = c;
        }
        return new String(cArray, 0, n);
    }

    private void b(MotionUpdateEvent motionUpdateEvent) {
        Disabler.d();
        if (this.b()) {
            if (this.J % 6 == 0) {
                EventInvoker.b(motionUpdateEvent, true);
            }
            ++this.J;
        }
        this.J = 0;
    }

    public void a(SettingEvent settingEvent) {
        Disabler.d();
        if ((settingEvent == null || afm_0.b(settingEvent).equals(PM.e)) && !StringPropertyInvoker.a(this.I, new String[]{PM.k, PM.b, PM.l})) {
            this.a(this.r(), aL0.a(aL0.a(aL0.a(new StringBuilder(), PM.m), (String)StringPropertyInvoker.b(this.I)), PM.j).toString(), 3500, NotificationType.WARNING);
            StringPropertyInvoker.b(this.I, PM.g);
        }
    }

    private void e(MotionUpdateEvent motionUpdateEvent) {
        Disabler.d();
        if (this.b()) {
            if (this.O + (double)this.mc.player.fallDistance - this.L > 3.0 || this.mc.player.fallDistance > 3.0f && this.O == 0.0) {
                this.a(new C03PacketPlayer(true));
                this.O = 0.0;
            }
            this.mc.player.motionY += 1.0E-4 * (double)this.mc.player.fallDistance;
            this.O += (double)this.mc.player.fallDistance - this.L;
            this.L = this.mc.player.fallDistance;
        }
        this.O = 0.0;
        this.L = 0.0;
    }

    static int b(NoFall noFall) {
        return noFall.N;
    }

    @Override
    public void o() {
        this.a((String)StringPropertyInvoker.b(this.I));
    }

    public NoFall(@NonNull ModuleManager moduleManager, EnumModuleType enumModuleType, int n, String string, String string2, short s, int n2) {
        long l4 = ((long)n << 32 | (long)s << 48 >>> 32 | (long)n2 << 48 >>> 48) ^ P;
        long l5 = l4 ^ 0x31C0E23F8798L;
        int n3 = (int)(l5 >>> 48);
        int n4 = (int)(l5 << 16 >>> 48);
        int n5 = (int)(l5 << 32 >>> 32);
        super(moduleManager, (char)n3, enumModuleType, string, (char)n4, n5, string2);
        this.I = StringPropertyInvoker.b(asp_2.a((String)((Object)NoFall.b("o", (int)11283, (long)(0x544A137044B5447DL ^ l4)))), new String[]{NoFall.b("o", (int)7797, (long)(0x169E93BA933EF611L ^ l4)), NoFall.b("o", (int)24989, (long)(0x7FF1D040233389FAL ^ l4)), NoFall.b("o", (int)21711, (long)(0x7406AC56C7FEBCAEL ^ l4)), NoFall.b("o", (int)30340, (long)(0x5348EEE7A4431EE1L ^ l4)), NoFall.b("o", (int)14031, (long)(0x274634FE80A85EA9L ^ l4))});
        this.M = asp_2.d();
        this.K = asp_2.c();
        ManagerInvoker.put(new Setting((String)((Object)NoFall.b("o", (int)7767, (long)(0x1D7FD175A613F637L ^ l4))), (String)((Object)NoFall.b("o", (int)20243, (long)(0x188B73A29616277EL ^ l4))), SettingType.COMBOBOX, (AbstractModule)this, this.I));
        ManagerInvoker.put(new Setting((String)((Object)NoFall.b("o", (int)500, (long)(0x58C07136D84DE998L ^ l4))), (String)((Object)NoFall.b("o", (int)9241, (long)(0x520273DDC887CC7BL ^ l4))), SettingType.CHECKBOX, (AbstractModule)this, this.M));
        ManagerInvoker.put(new Setting((String)((Object)NoFall.b("o", (int)26795, (long)(0x734D9FC159C680C4L ^ l4))), (String)((Object)NoFall.b("o", (int)4952, (long)(0x44CE28B5F4B17B3BL ^ l4))), SettingType.CHECKBOX, (AbstractModule)this, this.K, this::lambda$new$0));
    }

    private boolean c() {
        Disabler.d();
        LongJump longJump = (LongJump)ModuleInvoker.isEnable(ModuleRegistry.LONGJUMP);
        return (double)this.mc.player.fallDistance > (longJump.x() ? 8.0 : 3.5) && this.mc.player.prevPosY - this.mc.player.posY > 0.0 && (!aCM.d() || aCM.c() > 40 || MCInvoker.k(this.mc));
    }

    private int d() {
        return PlayerInvoker.c(this.mc.player, Items.water_bucket);
    }

    static {
        P = a1c.a(9021823051457952724L, -593386906127231633L, MethodHandles.lookup().lookupClass()).a(243659950919605L);
        S = new HashMap(13);
        long l4 = P ^ 0x17B210063F08L;
        Cipher cipher = Cipher.getInstance("DES/CBC/PKCS5Padding");
        int n = 2;
        SecretKeyFactory secretKeyFactory = SecretKeyFactory.getInstance("DES");
        byte[] byArray = new byte[8];
        byte[] byArray2 = byArray;
        byArray[0] = (byte)(l4 >>> 56);
        int n2 = 1;
        while (true) {
            byArray2 = byArray2;
            byArray2[n2] = (byte)(l4 << n2 * 8 >>> 56);
            ++n2;
        }
    }

    static void b(NoFall noFall, Packet packet) {
        noFall.a(packet);
    }

    private static String b(int n, long l4) {
        int n2 = n ^ (int)(l4 & 0x7FFFL) ^ 0x3FAD;
        if (R[n2] == null) {
            try {
                Long l5 = Thread.currentThread().getId();
                Object[] objectArray = (Object[])S.get(l5);
                objectArray = new Object[]{Cipher.getInstance("DES/CBC/PKCS5Padding"), SecretKeyFactory.getInstance("DES"), new IvParameterSpec(new byte[8])};
                S.put(l5, objectArray);
            }
            catch (Exception exception) {
                throw new RuntimeException("net/a_W", exception);
            }
            byte[] byArray = new byte[8];
            byArray[0] = (byte)(l4 >>> 56);
            int n3 = 1;
            while (true) {
                byArray[n3] = (byte)(l4 << n3 * 8 >>> 56);
                ++n3;
            }
        }
        return R[n2];
    }

    public StringProperty a() {
        return this.I;
    }

    static Minecraft c(NoFall noFall) {
        return noFall.mc;
    }

    static Minecraft a(NoFall noFall) {
        return noFall.mc;
    }

    @EventTarget
    public void d(MotionUpdateEvent motionUpdateEvent) {
        Disabler.d();
        if (EventInvoker.getState(motionUpdateEvent).equals((Object)cc.novoline.events.type.State.PRE)) {
            if (StringPropertyInvoker.isMode(this.I, PM.f)) {
                this.c(motionUpdateEvent);
            }
            if (this.b() && this.d() != -1 && (StringPropertyInvoker.isMode(this.I, PM.c) || auk_2.a((Boolean)Ba.b(this.K)))) {
                BlockPos blockPos = new BlockPos(EventInvoker.h(motionUpdateEvent), EventInvoker.e(motionUpdateEvent) + this.mc.player.motionY, EventInvoker.c(motionUpdateEvent));
                Block block = BlockStateInvoker.getBlock(BlockInvoker.getMaterial(this.mc.world, blockPos));
                if (BlocksInvoker.s(block)) {
                    this.a(new C09PacketHeldItemChange(this.d()));
                    this.a(new C06PacketPlayerPosLook(EventInvoker.h(motionUpdateEvent), EventInvoker.e(motionUpdateEvent), EventInvoker.c(motionUpdateEvent), EventInvoker.b(motionUpdateEvent), 90.0f, EventInvoker.g(motionUpdateEvent)));
                    this.N = this.d();
                    this.a(new C08PacketPlayerBlockPlacement(InventoryInvoker.c(this.mc.player.inventory, this.N)));
                    EventInvoker.a(motionUpdateEvent, true);
                    aci_0.a(NovolineInvoker.i(this.novoline), new aum_0(this, 60, ag3_0.TICK));
                }
                return;
            }
            if (!auk_2.a((Boolean)Ba.b(this.M)) || PlayerInvoker.T(this.mc.player)) {
                if (StringPropertyInvoker.isMode(this.I, PM.d)) {
                    this.a(motionUpdateEvent);
                }
                if (StringPropertyInvoker.isMode(this.I, PM.i)) {
                    this.e(motionUpdateEvent);
                }
                if (StringPropertyInvoker.isMode(this.I, PM.h)) {
                    this.b(motionUpdateEvent);
                }
            }
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(NoFall.class, "b", MethodType.fromMethodDescriptorString("(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/invoke/MutableCallSite;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }
}

