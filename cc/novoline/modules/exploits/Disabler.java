/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  org.checkerframework.checker.nullness.qual.NonNull
 */
package cc.novoline.modules.exploits;

import cc.novoline.events.CancellableEvent;
import cc.novoline.events.Event;
import cc.novoline.events.EventState;
import cc.novoline.events.EventTarget;
import cc.novoline.events.State;
import cc.novoline.events.events.ClickWindowEvent;
import cc.novoline.events.events.LoadWorldEvent;
import cc.novoline.events.events.PacketEvent;
import cc.novoline.events.events.PlayerUpdateEvent;
import cc.novoline.events.events.SettingEvent;
import cc.novoline.gui.screen.setting.Setting;
import cc.novoline.invoke.BlockInvoker;
import cc.novoline.invoke.BlockStateInvoker;
import cc.novoline.invoke.ListInvoker;
import cc.novoline.invoke.ManagerInvoker;
import cc.novoline.invoke.MathInvoker;
import cc.novoline.invoke.ModuleInvoker;
import cc.novoline.invoke.NovolineInvoker;
import cc.novoline.invoke.PacketEventInvoker;
import cc.novoline.invoke.PlayerInvoker;
import cc.novoline.invoke.StringPropertyInvoker;
import cc.novoline.modules.AbstractModule;
import cc.novoline.modules.EnumModuleType;
import cc.novoline.modules.configurations.annotation.Property;
import cc.novoline.modules.player.Scaffold;
import cc.novoline.modules.move.Speed;
import cc.novoline.modules.player.AutoArmor;
import cc.novoline.modules.player.InvManager;
import deobf.*;
import net.minecraft.network.packts.C00PacketKeepAlive;
import net.minecraft.network.packts.C02PacketUseEntity;
import net.minecraft.network.packts.C02PacketUseEntity$Action;
import net.minecraft.network.packts.C0APacketAnimation;
import net.minecraft.network.packts.C0BPacketEntityAction;
import net.minecraft.network.packts.C0BPacketEntityAction$Action;
import net.minecraft.network.packts.C0DPacketCloseWindow;
import net.minecraft.network.packts.C0FPacketConfirmTransaction;
import net.minecraft.network.packts.C16PacketClientStatus;
import net.minecraft.network.packts.C16PacketClientStatus$EnumState;
import java.lang.invoke.CallSite;
import java.lang.invoke.MethodHandle;
import java.lang.invoke.MethodHandles;
import java.lang.invoke.MethodType;
import java.lang.invoke.MutableCallSite;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.crypto.Cipher;
import javax.crypto.SecretKeyFactory;
import javax.crypto.spec.IvParameterSpec;
import net.Ba;
import net.minecraft.block.Block;
import net.minecraft.block.BlockPos;
import net.BooleanProperty;
import net.GameSpeed;
import net.Hr;
import net.INetHandlerPlayServer;
import net.Ia;
import net.KillAura;
import net.LongJump;
import net.ModuleManager;
import net.NotificationType;
import net.P8;
import net.Qj;
import net.VJ;
import net.a1c;
import net.a2_0;
import net.aCM;
import net.aD_;
import net.aMF;
import net.aMG;
import net.aVZ;
import net.adt_2;
import net.afm_0;
import net.ajy;
import net.anf_2;
import net.arp_2;
import net.asp_2;
import net.atH;
import net.auk_2;
import net.do_0;
import net.minecraft.init.Blocks;
import net.qh_1;
import org.checkerframework.checker.nullness.qual.NonNull;

public class Disabler
extends AbstractModule {
    private static Map R;
    @Property(value="ping-delay")
    private IntProperty M;
    @Property(value="ping-spoof")
    private BooleanProperty H;
    private static long O;
    private static int[] I;
    private TimerUtil L;
    private List<Packet> J;
    private static String[] Q;
    private TimerUtil N;
    private static String[] P;
    @Property(value="click-bypass")
    private BooleanProperty K;

    private static boolean lambda$dispatchList$2(Packet packet) {
        return packet instanceof C0FPacketConfirmTransaction;
    }

    static {
        O = a1c.a(-4811063764497517488L, -6319946409300693765L, MethodHandles.lookup().lookupClass()).a(186245836234609L);
        R = new HashMap(13);
        Disabler.b(new int[1]);
        long l4 = O ^ 0x7EBE7F38BCA8L;
        Cipher cipher = Cipher.getInstance("DES/CBC/PKCS5Padding");
        int n = 2;
        SecretKeyFactory secretKeyFactory = SecretKeyFactory.getInstance("DES");
        byte[] byArray = new byte[8];
        byte[] byArray2 = byArray;
        byArray[0] = (byte)(l4 >>> 56);
        int n2 = 1;
        while (true) {
            byArray2 = byArray2;
            byArray2[n2] = (byte)(l4 << n2 * 8 >>> 56);
            ++n2;
        }
    }

    private static Object b(MethodHandles.Lookup lookup, MutableCallSite mutableCallSite, String string, Object[] objectArray) {
        int n = (Integer)objectArray[0];
        long l4 = (Long)objectArray[1];
        String string2 = Disabler.b(n, l4);
        MethodHandle methodHandle = MethodHandles.constant(String.class, string2);
        mutableCallSite.setTarget(MethodHandles.dropArguments(methodHandle, 0, Integer.TYPE, Long.TYPE));
        return string2;
    }

    public Disabler(@NonNull char c, int n, ModuleManager moduleManager, short s, EnumModuleType enumModuleType, String string) {
        long l4 = ((long)c << 48 | (long)n << 32 >>> 16 | (long)s << 48 >>> 48) ^ O;
        long l5 = l4 ^ 0x18B327371D59L;
        int n2 = (int)(l5 >>> 56);
        long l6 = l5 << 8 >>> 8;
        super((byte)n2, moduleManager, l6, enumModuleType, string);
        this.H = asp_2.d();
        Disabler.d();
        this.M = (IntProperty)adt_2.a((IntProperty)adt_2.c(asp_2.a(P8.d(400)), P8.d(300)), P8.d(800));
        this.K = asp_2.d();
        this.J = new ArrayList<Packet>();
        this.L = new TimerUtil();
        this.N = new TimerUtil();
        ManagerInvoker.put(new Setting((String)((Object)Disabler.b("v", (int)22921, (long)(0x2C16F0719557F4C0L ^ l4))), (String)((Object)Disabler.b("v", (int)30553, (long)(0x12E2977F27FCDA16L ^ l4))), SettingType.SEPARATOR, this));
        ManagerInvoker.put(new Setting((String)((Object)Disabler.b("v", (int)14070, (long)(0x16EF860CE4529BB3L ^ l4))), (String)((Object)Disabler.b("v", (int)18256, (long)(0x718B5B98F3DAEA1BL ^ l4))), SettingType.CHECKBOX, (AbstractModule)this, this.H));
        ManagerInvoker.put(new Setting((String)((Object)Disabler.b("v", (int)6357, (long)(0x68FA9FBE4776359FL ^ l4))), (String)((Object)Disabler.b("v", (int)25901, (long)(0x4F82B160C826C860L ^ l4))), SettingType.SLIDER, this, this.M, 50.0, (String)((Object)Disabler.b("v", (int)12095, (long)(0x3E6981C6F1DD0277L ^ l4))), this::lambda$new$0));
        ManagerInvoker.put(new Setting((String)((Object)Disabler.b("v", (int)27330, (long)(0xCE7A2196FA4785L ^ l4))), (String)((Object)Disabler.b("v", (int)30619, (long)(0xFE2BBB06E555ADDL ^ l4))), SettingType.SEPARATOR, this));
        ManagerInvoker.put(new Setting((String)((Object)Disabler.b("v", (int)10147, (long)(0x325548C0CD6A0AEFL ^ l4))), (String)((Object)Disabler.b("v", (int)7633, (long)(0x4047C0CE3386B09FL ^ l4))), SettingType.CHECKBOX, (AbstractModule)this, this.K));
        if (ListInvoker.b() != null) {
            Disabler.b(new int[2]);
        }
    }

    private static String b(int n, long l4) {
        int n2 = n ^ (int)(l4 & 0x7FFFL) ^ 0x1723;
        if (Q[n2] == null) {
            try {
                Long l5 = Thread.currentThread().getId();
                Object[] objectArray = (Object[])R.get(l5);
                objectArray = new Object[]{Cipher.getInstance("DES/CBC/PKCS5Padding"), SecretKeyFactory.getInstance("DES"), new IvParameterSpec(new byte[8])};
                R.put(l5, objectArray);
            }
            catch (Exception exception) {
                throw new RuntimeException("net/a_p", exception);
            }
            byte[] byArray = new byte[8];
            byArray[0] = (byte)(l4 >>> 56);
            int n3 = 1;
            while (true) {
                byArray[n3] = (byte)(l4 << n3 * 8 >>> 56);
                ++n3;
            }
        }
        return Q[n2];
    }

    public boolean g() {
        return auk_2.a((Boolean)Ba.b(this.H));
    }

    public BooleanProperty c() {
        return this.K;
    }

    @EventTarget
    public void a(ClickWindowEvent clickWindowEvent) {
        this.onEvent(clickWindowEvent);
    }

    public boolean a(boolean bl) {
        Disabler.d();
        return !(!aCM.d() && !auk_2.a((Boolean)Ba.b(this.K)) || !PlayerInvoker.q(this.mc.player) || !qh_1.c(this.N, 160L) && bl);
    }

    public static int[] d() {
        return I;
    }

    private static String b(byte[] byArray) {
        int n = 0;
        int n2 = byArray.length;
        char[] cArray = new char[n2];
        for (int i = 0; i < n2; ++i) {
            char c;
            int n3 = 0xFF & byArray[i];
            if (n3 < 192) {
                cArray[n++] = (char)n3;
                continue;
            }
            if (n3 < 224) {
                c = (char)((char)(n3 & 0x1F) << 6);
                n3 = byArray[++i];
                c = (char)(c | (char)(n3 & 0x3F));
                cArray[n++] = c;
                continue;
            }
            if (i >= n2 - 2) continue;
            c = (char)((char)(n3 & 0xF) << 12);
            n3 = byArray[++i];
            c = (char)(c | (char)(n3 & 0x3F) << 6);
            n3 = byArray[++i];
            c = (char)(c | (char)(n3 & 0x3F));
            cArray[n++] = c;
        }
        return new String(cArray, 0, n);
    }

    private static CallSite b(MethodHandles.Lookup lookup, String string, MethodType methodType) {
        MutableCallSite mutableCallSite = new MutableCallSite(methodType);
        try {
            mutableCallSite.setTarget(MethodHandles.explicitCastArguments(MethodHandles.insertArguments(cfr_ldc_0().asCollector(Object[].class, methodType.parameterCount()), 0, lookup, mutableCallSite, string), methodType));
            return mutableCallSite;
        }
        catch (Exception exception) {
            throw new RuntimeException("net/a_p" + " : " + string + " : " + methodType.toString(), exception);
        }
    }

    private boolean e() {
        GameSpeed gameSpeed = (GameSpeed)ModuleInvoker.isEnable(ModuleRegistry.GAMESPEED);
        LongJump longJump = (LongJump)ModuleInvoker.isEnable(ModuleRegistry.LONGJUMP);
        Disabler.d();
        Blink blink = (Blink)ModuleInvoker.isEnable(ModuleRegistry.BLINK);
        return gameSpeed.x() || Ia.a(longJump) || blink.x() && StringPropertyInvoker.isMode(ajy.b(blink), do_0.a);
    }

    @Override
    public void w() {
        if (aCM.d()) {
            InvManager invManager = (InvManager)ModuleInvoker.isEnable(ModuleRegistry.INVMANAGER);
            invManager.a((SettingEvent)null);
            AutoArmor autoArmor = (AutoArmor)ModuleInvoker.isEnable(ModuleRegistry.AUTOARMOR);
            autoArmor.a((SettingEvent)null);
            Scaffold scaffold = (Scaffold)ModuleInvoker.isEnable(ModuleRegistry.SCAFFOLD);
            scaffold.a((SettingEvent)null);
            Speed speed = (Speed)ModuleInvoker.isEnable(ModuleRegistry.SPEED);
            speed.a((SettingEvent)null);
            LongJump longJump = (LongJump)ModuleInvoker.isEnable(ModuleRegistry.LONGJUMP);
            longJump.a((SettingEvent)null);
            GameSpeed gameSpeed = (GameSpeed)ModuleInvoker.isEnable(ModuleRegistry.GAMESPEED);
            gameSpeed.a((SettingEvent)null);
            Blink blink = (Blink)ModuleInvoker.isEnable(ModuleRegistry.BLINK);
            blink.a((SettingEvent)null);
        }
    }

    @EventTarget
    public void a(PacketEvent packetEvent) {
        this.onEvent(packetEvent);
    }

    public boolean a() {
        return auk_2.a((Boolean)Ba.b(this.K));
    }

    @EventTarget
    public void a(PlayerUpdateEvent playerUpdateEvent) {
        this.onEvent(playerUpdateEvent);
    }

    public void b() {
        this.b(new C0DPacketCloseWindow(0));
        qh_1.b(this.N);
    }

    private Boolean lambda$new$0() {
        return (Boolean)Ba.b(this.H);
    }

    private void f() {
        aMF.a(aMF.b(ListInvoker.stream(this.J), Disabler::lambda$dispatchList$1), this::b);
        aMF.a(aMF.b(ListInvoker.stream(this.J), Disabler::lambda$dispatchList$2), this::b);
        ListInvoker.clear(this.J);
        qh_1.b(this.L);
    }

    private boolean a(BlockPos blockPos) {
        Disabler.d();
        Block block = BlockStateInvoker.getBlock(BlockInvoker.getMaterial(this.mc.world, blockPos));
        return block == Blocks.R || block == Blocks.aq || block == Blocks.ag || block == Blocks.aB || block == Blocks.aA || block == Blocks.ab || block == Blocks.t || block == Blocks.bz || block == Blocks.g;
    }

    private static boolean lambda$dispatchList$1(Packet packet) {
        return packet instanceof C00PacketKeepAlive;
    }

    public static void b(int[] nArray) {
        I = nArray;
    }

    @EventTarget
    public void a(LoadWorldEvent loadWorldEvent) {
        this.f();
    }

    private void onEvent(Event event) {
        block18: {
            Packet<INetHandlerPlayServer> packet;
            Object object;
            CancellableEvent cancellableEvent;
            block19: {
                C0BPacketEntityAction$Action c0BPacketEntityAction$Action;
                block15: {
                    block16: {
                        boolean bl;
                        block17: {
                            Disabler.d();
                            if (!(event instanceof ClickWindowEvent)) break block15;
                            cancellableEvent = (ClickWindowEvent)event;
                            object = do_0.e;
                            if (!auk_2.a((Boolean)Ba.b(this.K))) break block16;
                            packet = aD_.a(cancellableEvent);
                            bl = aVZ.d(packet);
                            if (aD_.b(cancellableEvent) != EventState.PRE) break block17;
                            if (!PlayerInvoker.q(this.mc.player) || bl) break block16;
                            this.a(this.r(), (String)object, 2500, NotificationType.WARNING);
                            aD_.a(cancellableEvent, true);
                        }
                        if (PlayerInvoker.q(this.mc.player) && bl && qh_1.c(this.N, 160L)) {
                            this.b();
                        }
                    }
                    if (aD_.b(cancellableEvent) == EventState.PRE && aCM.d() && PlayerInvoker.q(this.mc.player)) {
                        this.a(this.r(), (String)object, 2500, NotificationType.WARNING);
                        aD_.a(cancellableEvent, true);
                    }
                }
                if (!(event instanceof PacketEvent) || PacketEventInvoker.getState((PacketEvent)(cancellableEvent = (PacketEvent)event)) != State.OUTGOING) break block18;
                object = PacketEventInvoker.c((PacketEvent)cancellableEvent);
                if (object instanceof C0BPacketEntityAction && ((c0BPacketEntityAction$Action = VJ.a((C0BPacketEntityAction)(packet = (C0BPacketEntityAction)PacketEventInvoker.c((PacketEvent)cancellableEvent)))) == C0BPacketEntityAction$Action.START_SPRINTING || c0BPacketEntityAction$Action == C0BPacketEntityAction$Action.STOP_SPRINTING)) {
                    PacketEventInvoker.setCancelled((PacketEvent)cancellableEvent, true);
                }
                if (object instanceof C16PacketClientStatus && arp_2.a((C16PacketClientStatus)(packet = (C16PacketClientStatus)object)) == C16PacketClientStatus$EnumState.OPEN_INVENTORY_ACHIEVEMENT && auk_2.a((Boolean)Ba.b(this.K))) {
                    PacketEventInvoker.setCancelled((PacketEvent)cancellableEvent, true);
                }
                if (object instanceof C02PacketUseEntity && Hr.a((C02PacketUseEntity)(packet = (C02PacketUseEntity)object)) == C02PacketUseEntity$Action.ATTACK && this.e()) {
                    PacketEventInvoker.setCancelled((PacketEvent)cancellableEvent, true);
                }
                if (!(PacketEventInvoker.c((PacketEvent)cancellableEvent) instanceof C0APacketAnimation)) break block19;
                if (!this.e()) break block18;
                PacketEventInvoker.setCancelled((PacketEvent)cancellableEvent, true);
            }
            if (object instanceof C0FPacketConfirmTransaction && a2_0.a((C0FPacketConfirmTransaction)(packet = (C0FPacketConfirmTransaction)object)) < 0 && auk_2.a((Boolean)Ba.b(this.H))) {
                ListInvoker.add(this.J, object);
                PacketEventInvoker.setCancelled((PacketEvent)cancellableEvent, true);
            }
            if (object instanceof C00PacketKeepAlive && auk_2.a((Boolean)Ba.b(this.H))) {
                packet = (C00PacketKeepAlive)object;
                aMG.a((C00PacketKeepAlive)packet, anf_2.a(anf_2.c(), 0, Integer.MAX_VALUE));
                ListInvoker.add(this.J, packet);
                PacketEventInvoker.setCancelled((PacketEvent)cancellableEvent, true);
            }
        }
        if (event instanceof PlayerUpdateEvent && auk_2.a((Boolean)Ba.b(this.H))) {
            double d = (long)P8.b((Integer)adt_2.a(this.M)) - Qj.a(NovolineInvoker.a(this.novoline));
            double d2 = MathInvoker.d(d, Qj.a(NovolineInvoker.a(this.novoline)));
            KillAura killAura = (KillAura)ModuleInvoker.isEnable(ModuleRegistry.KILLAURA);
            boolean bl = atH.m(killAura) && atH.a(killAura, do_0.d);
            if (qh_1.a(this.L, this.e() ? 4000.0 : d2) && !ListInvoker.isEmpty(this.J)) {
                this.f();
            }
        }
    }

    public void a(SettingEvent settingEvent) {
        Disabler.d();
        if (settingEvent == null || afm_0.b(settingEvent).equals(do_0.c) || afm_0.b(settingEvent).equals(do_0.b)) {
            Scaffold scaffold = (Scaffold)ModuleInvoker.isEnable(ModuleRegistry.SCAFFOLD);
            scaffold.a((SettingEvent)null);
            Speed speed = (Speed)ModuleInvoker.isEnable(ModuleRegistry.SPEED);
            speed.a((SettingEvent)null);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(Disabler.class, "b", MethodType.fromMethodDescriptorString("(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/invoke/MutableCallSite;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }
}

