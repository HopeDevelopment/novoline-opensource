/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  org.checkerframework.checker.nullness.qual.NonNull
 */
package cc.novoline.modules.exploits;

import cc.novoline.events.EventTarget;
import cc.novoline.events.events.MotionUpdateEvent;
import cc.novoline.events.events.MoveEvent;
import cc.novoline.events.type.State;
import cc.novoline.gui.screen.setting.Setting;
import cc.novoline.invoke.BlockInvoker;
import cc.novoline.invoke.BlockStateInvoker;
import cc.novoline.invoke.EventInvoker;
import cc.novoline.invoke.ListInvoker;
import cc.novoline.invoke.ManagerInvoker;
import cc.novoline.invoke.MathInvoker;
import cc.novoline.invoke.ModuleInvoker;
import cc.novoline.invoke.MoveInoker;
import cc.novoline.invoke.NovolineInvoker;
import cc.novoline.invoke.ObjectMouseOverInvoker;
import cc.novoline.invoke.PlayerInvoker;
import cc.novoline.invoke.StringPropertyInvoker;
import cc.novoline.modules.AbstractModule;
import net.minecraft.init.Blocks;
import cc.novoline.modules.EnumModuleType;
import deobf.ModuleRegistry;
import net.minecraft.util.MovingObjectPosition;
import cc.novoline.modules.configurations.annotation.Property;
import deobf.SettingType;
import deobf.TimerUtil;
import deobf.Vec3;
import net.minecraft.network.packts.C03PacketPlayer;
import net.minecraft.network.packts.C04PacketPlayerPosition;
import net.minecraft.network.packts.C07PacketPlayerDigging;
import net.minecraft.network.packts.C07PacketPlayerDigging$Action;
import java.lang.invoke.CallSite;
import java.lang.invoke.MethodHandle;
import java.lang.invoke.MethodHandles;
import java.lang.invoke.MethodType;
import java.lang.invoke.MutableCallSite;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.concurrent.CopyOnWriteArrayList;
import javax.crypto.Cipher;
import javax.crypto.SecretKeyFactory;
import javax.crypto.spec.IvParameterSpec;

import org.checkerframework.checker.nullness.qual.NonNull;

public class ClickTeleport
extends AbstractModule {
    private List<BlockPos> N;
    private TimerUtil L;
    @Property(value="damage")
    private BooleanProperty M;
    private static String[] P;
    private static long O;
    private static String[] Q;
    private static Map R;
    @Property(value="mode")
    private StringProperty H;
    @Property(value="speed")
    private StringProperty I;
    private boolean J;
    @Property(value="delay")
    private E3 K;

    private static CallSite b(MethodHandles.Lookup lookup, String string, MethodType methodType) {
        MutableCallSite mutableCallSite = new MutableCallSite(methodType);
        try {
            mutableCallSite.setTarget(MethodHandles.explicitCastArguments(MethodHandles.insertArguments(cfr_ldc_0().asCollector(Object[].class, methodType.parameterCount()), 0, lookup, mutableCallSite, string), methodType));
            return mutableCallSite;
        }
        catch (Exception exception) {
            throw new RuntimeException("net/a_j" + " : " + string + " : " + methodType.toString(), exception);
        }
    }

    private static Object b(MethodHandles.Lookup lookup, MutableCallSite mutableCallSite, String string, Object[] objectArray) {
        int n = (Integer)objectArray[0];
        long l4 = (Long)objectArray[1];
        String string2 = ClickTeleport.b(n, l4);
        MethodHandle methodHandle = MethodHandles.constant(String.class, string2);
        mutableCallSite.setTarget(MethodHandles.dropArguments(methodHandle, 0, Integer.TYPE, Long.TYPE));
        return string2;
    }

    static List c(ClickTeleport clickTeleport) {
        return clickTeleport.N;
    }

    private void b(double d, double d2, double d3) {
        Disabler.d();
        KillAura killAura = (KillAura)ModuleInvoker.isEnable(ModuleRegistry.KILLAURA);
        if (atH.b(killAura)) {
            this.b(new C07PacketPlayerDigging(C07PacketPlayerDigging$Action.RELEASE_USE_ITEM, BlockPos.m, EnumFacing.DOWN));
        }
        this.b(new C04PacketPlayerPosition(d, d2, d3, PlayerInvoker.b(this.mc.player, d2)));
    }

    static void b(ClickTeleport clickTeleport) {
        clickTeleport.b();
    }

    private static String b(int n, long l4) {
        int n2 = n ^ (int)(l4 & 0x7FFFL) ^ 0x7831;
        if (Q[n2] == null) {
            try {
                Long l5 = Thread.currentThread().getId();
                Object[] objectArray = (Object[])R.get(l5);
                objectArray = new Object[]{Cipher.getInstance("DES/CBC/PKCS5Padding"), SecretKeyFactory.getInstance("DES"), new IvParameterSpec(new byte[8])};
                R.put(l5, objectArray);
            }
            catch (Exception exception) {
                throw new RuntimeException("net/a_j", exception);
            }
            byte[] byArray = new byte[8];
            byArray[0] = (byte)(l4 >>> 56);
            int n3 = 1;
            while (true) {
                byArray[n3] = (byte)(l4 << n3 * 8 >>> 56);
                ++n3;
            }
        }
        return Q[n2];
    }

    public Vec3 a(double d, double d2, double d3) {
        return new Vec3(d, d2, d3);
    }

    private Vec3 c() {
        return new Vec3(this.mc.player.posX, this.mc.player.posY + (double)PlayerInvoker.X(this.mc.player), this.mc.player.posZ);
    }

    private void b() {
        block15: {
            block16: {
                Iterator iterator;
                double d;
                Disabler.d();
                if (((String)StringPropertyInvoker.b(this.H)).equals(az7_0.i)) {
                    double d2 = PlayerInvoker.a(this.mc.player, true, 0.2);
                    if (this.d() != null) {
                        if (this.d().typeOfHit == net.I.BLOCK) {
                            BlockPos blockPos = ObjectMouseOverInvoker.getBlockPos(this.d());
                            double d3 = (double)amv_2.j(blockPos) + 0.5;
                            double d4 = (double)amv_2.i(blockPos) + 0.5;
                            float f = ae4_0.a(d3, d4);
                            d = MathInvoker.a(PlayerInvoker.c(this.mc.player, d3, amv_2.h(blockPos), d4));
                            double d5 = this.mc.player.posY;
                            double d6 = d2;
                            if (d6 < d) {
                                Block block;
                                Vec3 vec3;
                                double d7 = -MathInvoker.i(MathInvoker.o(f)) * d6;
                                double d8 = MathInvoker.m(MathInvoker.o(f)) * d6;
                                double d9 = 0.0;
                                Vec3 vec32 = this.a(this.mc.player.posX + d7, d5, this.mc.player.posZ + d8);
                                Vec3 vec33 = ae4_0.a(90.0f, 0.0f);
                                Vec3 vec34 = aNE.a(vec32, vec33.xCoord * 99.0, vec33.yCoord * 99.0, vec33.zCoord * 99.0);
                                MovingObjectPosition movingObjectPosition = BlockInvoker.a(this.mc.world, vec32, vec34, false, false, false);
                                if (movingObjectPosition == null) {
                                    this.a(az7_0.g, 2000, NotificationType.ERROR);
                                    return;
                                }
                                double d10 = 0.0;
                                if (d10 < d2) {
                                    Vec3 vec35 = ae4_0.a(0.0f, f);
                                    vec3 = aNE.a(vec32, vec35.xCoord * d10, vec35.yCoord * d10, vec35.zCoord * d10);
                                    MovingObjectPosition movingObjectPosition2 = BlockInvoker.a(this.mc.world, vec32, vec3, false, false, false);
                                    if (movingObjectPosition2 != null && movingObjectPosition2.typeOfHit == net.I.BLOCK) {
                                        d9 = d10;
                                    }
                                    d10 += d2 / 100.0;
                                }
                                Block block2 = BlockStateInvoker.getBlock(BlockInvoker.getMaterial(this.mc.world, new BlockPos(this.mc.player.posX - MathInvoker.i(MathInvoker.o(f)) * (d6 + d2), d5, this.mc.player.posZ + MathInvoker.m(MathInvoker.o(f)) * (d6 + d2))));
                                double d11 = d9 - 0.0;
                                int cfr_ignored_3 = d11 == 0.0 ? 0 : (d11 > 0.0 ? 1 : -1);
                                double d12 = 0.0;
                                vec3 = this.a(this.mc.player.posX + d7, d5, this.mc.player.posZ + d8);
                                double d13 = 0.0;
                                double d14 = d13 - 99.0;
                                int cfr_ignored_4 = d14 == 0.0 ? 0 : (d14 < 0.0 ? -1 : 1);
                                Vec3 vec36 = ae4_0.a(90.0f, 0.0f);
                                Vec3 vec37 = aNE.a(vec3, vec36.xCoord * d13, vec36.yCoord * d13, vec36.zCoord * d13);
                                MovingObjectPosition movingObjectPosition3 = BlockInvoker.a(this.mc.world, vec3, vec37, false, false, false);
                                if (movingObjectPosition3 != null && movingObjectPosition3.typeOfHit == net.I.BLOCK && (block = BlockStateInvoker.getBlock(BlockInvoker.getMaterial(this.mc.world, ObjectMouseOverInvoker.getBlockPos(movingObjectPosition3)))) != Blocks.bN) {
                                    d12 = MathHelper.d(MathHelper.a(d13, 3), 0.125);
                                }
                                d13 += 1.0E-4;
                                double d15 = d12 - 0.0;
                                int cfr_ignored_5 = d15 == 0.0 ? 0 : (d15 > 0.0 ? 1 : -1);
                                this.b(this.mc.player.posX + d7, d5, this.mc.player.posZ + d8);
                                d6 += d2;
                            }
                            PlayerInvoker.b(this.mc.player, d3, d5, d4);
                        }
                        this.d();
                    }
                }
                if (!((String)StringPropertyInvoker.b(this.H)).equals(az7_0.l)) break block15;
                MovingObjectPosition movingObjectPosition = this.d();
                if (movingObjectPosition == null) break block16;
                if (movingObjectPosition.typeOfHit != net.I.BLOCK) break block15;
                if (auk_2.a((Boolean)Ba.b(this.M))) {
                    this.b(new C04PacketPlayerPosition(this.mc.player.posX, this.mc.player.posY + 3.0005123413124, this.mc.player.posZ, false));
                    this.b(new C04PacketPlayerPosition(this.mc.player.posX, this.mc.player.posY, this.mc.player.posZ, false));
                    this.b(new C03PacketPlayer(true));
                }
                BlockPos blockPos = ObjectMouseOverInvoker.getBlockPos(movingObjectPosition);
                double d16 = MathInvoker.a(this.mc.player.posX - (double)amv_2.j(blockPos));
                double d17 = MathInvoker.a(this.mc.player.posZ - (double)amv_2.i(blockPos));
                double d18 = MathInvoker.e(d16, d17);
                d = this.mc.player.posY - (double)amv_2.h(blockPos);
                int n = 0;
                if ((double)n < d18) {
                    int cfr_ignored_6 = n % 7;
                    double d19 = -MathInvoker.i(MathInvoker.o(this.mc.player.rotationYaw)) * (double)n;
                    double d20 = MathInvoker.m(MathInvoker.o(this.mc.player.rotationYaw)) * (double)n;
                    ListInvoker.add(this.N, new BlockPos(this.mc.player.posX + d19, this.mc.player.posY, this.mc.player.posZ + d20));
                    ++n;
                }
                ListInvoker.add(this.N, blockPos);
                if (((String)StringPropertyInvoker.b(this.I)).equals(az7_0.d) && dz_0.c(iterator = ListInvoker.iterator(this.N))) {
                    BlockPos blockPos2 = (BlockPos)dz_0.b(iterator);
                    if (ListInvoker.indexOf(this.N, blockPos2) == ListInvoker.size(this.N) - 1) {
                        PlayerInvoker.b(this.mc.player, amv_2.j(blockPos2), amv_2.h(blockPos2) + 1, amv_2.i(blockPos2));
                        this.d();
                    }
                    this.b(new C04PacketPlayerPosition(amv_2.j(blockPos2), amv_2.h(blockPos2), amv_2.i(blockPos2), false));
                }
            }
            this.d();
        }
    }

    static {
        O = a1c.a(3679186498393919671L, 3055677724221741256L, MethodHandles.lookup().lookupClass()).a(15142646077425L);
        R = new HashMap(13);
        long l4 = O ^ 0xA0BF04A2F13L;
        Cipher cipher = Cipher.getInstance("DES/CBC/PKCS5Padding");
        int n = 2;
        SecretKeyFactory secretKeyFactory = SecretKeyFactory.getInstance("DES");
        byte[] byArray = new byte[8];
        byte[] byArray2 = byArray;
        byArray[0] = (byte)(l4 >>> 56);
        int n2 = 1;
        while (true) {
            byArray2 = byArray2;
            byArray2[n2] = (byte)(l4 << n2 * 8 >>> 56);
            ++n2;
        }
    }

    static TimerUtil a(ClickTeleport clickTeleport) {
        return clickTeleport.L;
    }

    @EventTarget
    public void a(MotionUpdateEvent motionUpdateEvent) {
        Disabler.d();
        if (EventInvoker.getState(motionUpdateEvent) == State.PRE && ((String)StringPropertyInvoker.b(this.H)).equals(az7_0.f) && ((String)StringPropertyInvoker.b(this.I)).equals(az7_0.a) && qh_1.c(this.L, lx_2.a((Long)ac7.a(this.K)))) {
            if (!ListInvoker.isEmpty(this.N)) {
                if (ListInvoker.size(this.N) == 1) {
                    PlayerInvoker.b(this.mc.player, amv_2.j((BlockPos)ListInvoker.get(this.N, 0)), amv_2.h((BlockPos)ListInvoker.get(this.N, 0)) + 1, amv_2.i((BlockPos)ListInvoker.get(this.N, 0)));
                    this.d();
                }
                this.b(new C04PacketPlayerPosition(amv_2.j((BlockPos)ListInvoker.get(this.N, 0)), amv_2.h((BlockPos)ListInvoker.get(this.N, 0)), amv_2.i((BlockPos)ListInvoker.get(this.N, 0)), false));
                ListInvoker.remove(this.N, 0);
            }
            qh_1.b(this.L);
        }
    }

    public ClickTeleport(@NonNull ModuleManager moduleManager, EnumModuleType enumModuleType, long l4, String string, String string2, short s) {
        long l5 = (l4 << 16 | (long)s << 48 >>> 48) ^ O;
        long l6 = l5 ^ 0x12AB7AF9F10EL;
        int n = (int)(l6 >>> 48);
        int n2 = (int)(l6 << 16 >>> 48);
        int n3 = (int)(l6 << 32 >>> 32);
        super(moduleManager, (char)n, enumModuleType, string, (char)n2, n3, string2);
        this.N = new CopyOnWriteArrayList<BlockPos>();
        Disabler.d();
        this.L = new TimerUtil();
        this.H = StringPropertyInvoker.b(asp_2.a((String)((Object)ClickTeleport.b("q", (int)10708, (long)(0x535F4264192E70B7L ^ l5)))), new String[]{ClickTeleport.b("q", (int)27362, (long)(0x7522AD3E8FC4B38BL ^ l5)), ClickTeleport.b("q", (int)8155, (long)(0x4CD8B5FEC54FC6B7L ^ l5))});
        this.I = StringPropertyInvoker.b(asp_2.a((String)((Object)ClickTeleport.b("q", (int)24528, (long)(0x326AA015C01F06B5L ^ l5)))), new String[]{ClickTeleport.b("q", (int)7511, (long)(0x4B6AEEF63766C439L ^ l5)), ClickTeleport.b("q", (int)10309, (long)(0x438BF2FA26287122L ^ l5))});
        this.K = (E3)ac7.a((E3)ac7.b(asp_2.a(lx_2.b(100L)), lx_2.b(50L)), lx_2.b(400L));
        this.M = asp_2.a(auk_2.b(true));
        ManagerInvoker.put(new Setting((String)((Object)ClickTeleport.b("q", (int)2863, (long)(0x4A7474CF3FFFD247L ^ l5))), (String)((Object)ClickTeleport.b("q", (int)20892, (long)(0x7AF75EA0C9D808F7L ^ l5))), SettingType.COMBOBOX, (AbstractModule)this, this.H));
        ManagerInvoker.put(new Setting((String)((Object)ClickTeleport.b("q", (int)10321, (long)(0xB2BEF149D08F13EL ^ l5))), (String)((Object)ClickTeleport.b("q", (int)27122, (long)(0x69BCE719B472B098L ^ l5))), SettingType.COMBOBOX, (AbstractModule)this, this.I, this::lambda$new$0));
        ManagerInvoker.put(new Setting((String)((Object)ClickTeleport.b("q", (int)25827, (long)(0xF11C8F1F0B1BD87L ^ l5))), (String)((Object)ClickTeleport.b("q", (int)10533, (long)(0x6E61039B050FF048L ^ l5))), SettingType.SLIDER, (AbstractModule)this, this.K, 10.0, this::lambda$new$1));
        ManagerInvoker.put(new Setting((String)((Object)ClickTeleport.b("q", (int)10983, (long)(0x3C71359542E4F381L ^ l5))), (String)((Object)ClickTeleport.b("q", (int)852, (long)(0x741F82EC2D9C5A36L ^ l5))), SettingType.CHECKBOX, (AbstractModule)this, this.M, this::lambda$new$2));
        ListInvoker.b(new ListInvoker[3]);
    }

    @Override
    public void o() {
        aci_0.a(NovolineInvoker.i(this.novoline), new aUH(this, 50, ag3_0.TICK));
    }

    private Boolean lambda$new$2() {
        return auk_2.b(((String)StringPropertyInvoker.b(this.H)).equals(az7_0.c));
    }

    private Boolean lambda$new$0() {
        return auk_2.b(((String)StringPropertyInvoker.b(this.H)).equals(az7_0.b));
    }

    @EventTarget
    public void a(MoveEvent moveEvent) {
        Disabler.d();
        if (((String)StringPropertyInvoker.b(this.H)).equals(az7_0.h) && ((String)StringPropertyInvoker.b(this.I)).equals(az7_0.k) && !ListInvoker.isEmpty(this.N)) {
            this.mc.player.motionY = 0.0;
            MoveInoker.setY(moveEvent, 0.0);
            MoveInoker.setSpeed(moveEvent, 0.0);
        }
    }

    public MovingObjectPosition d() {
        float f = 999.0f;
        Vec3 vec3 = this.c();
        Vec3 vec32 = ae4_0.a(this.mc.player.rotationPitch, this.mc.player.rotationYaw);
        Vec3 vec33 = aNE.a(vec3, vec32.xCoord * (double)f, vec32.yCoord * (double)f, vec32.zCoord * (double)f);
        return BlockInvoker.a(this.mc.world, vec3, vec33, false, false, false);
    }

    private Boolean lambda$new$1() {
        Disabler.d();
        return auk_2.b(((String)StringPropertyInvoker.b(this.H)).equals(az7_0.e) && ((String)StringPropertyInvoker.b(this.I)).equals(az7_0.j));
    }

    private static String b(byte[] byArray) {
        int n = 0;
        int n2 = byArray.length;
        char[] cArray = new char[n2];
        for (int i = 0; i < n2; ++i) {
            char c;
            int n3 = 0xFF & byArray[i];
            if (n3 < 192) {
                cArray[n++] = (char)n3;
                continue;
            }
            if (n3 < 224) {
                c = (char)((char)(n3 & 0x1F) << 6);
                n3 = byArray[++i];
                c = (char)(c | (char)(n3 & 0x3F));
                cArray[n++] = c;
                continue;
            }
            if (i >= n2 - 2) continue;
            c = (char)((char)(n3 & 0xF) << 12);
            n3 = byArray[++i];
            c = (char)(c | (char)(n3 & 0x3F) << 6);
            n3 = byArray[++i];
            c = (char)(c | (char)(n3 & 0x3F));
            cArray[n++] = c;
        }
        return new String(cArray, 0, n);
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(ClickTeleport.class, "b", MethodType.fromMethodDescriptorString("(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/invoke/MutableCallSite;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }
}

